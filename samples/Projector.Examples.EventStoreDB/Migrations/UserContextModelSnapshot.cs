// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjectoR.Examples.EventStoreDB.Data;

#nullable disable

namespace ProjectoR.Examples.EventStoreDB.Migrations
{
    [DbContext(typeof(UserContext))]
    partial class UserContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectoR.Examples.EventStoreDB.Data.NumberOfActiveUsersProjection", b =>
                {
                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.HasKey("Country");

                    b.ToTable("NumberOfActiveUsers", (string)null);
                });

            modelBuilder.Entity("ProjectoR.Examples.EventStoreDB.UserProjection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", "Projection");
                });

            modelBuilder.Entity("ProjectoR.Examples.EventStoreDB.UserProjection", b =>
                {
                    b.OwnsOne("ProjectoR.Examples.EventStoreDB.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("UserProjectionId")
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserProjectionId");

                            b1.ToTable("User", "Projection");

                            b1.WithOwner()
                                .HasForeignKey("UserProjectionId");
                        });

                    b.OwnsOne("ProjectoR.Examples.EventStoreDB.ContactInformation", "ContactInformation", b1 =>
                        {
                            b1.Property<Guid>("UserProjectionId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Mobile")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("UserProjectionId");

                            b1.ToTable("User", "Projection");

                            b1.WithOwner()
                                .HasForeignKey("UserProjectionId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("ContactInformation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
